name: Test Python Package

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      python-version:
        required: true
        type: string

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ inputs.os }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: "1.4.2"

      - name: Install package
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Activate virtualenv unix
        if: ${{ inputs.os == 'ubuntu-latest' || inputs.os == 'macos-latest' }}
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Activate virtualenv windows
        if: ${{ inputs.os == 'windows-latest' }}
        run: |
          .\.venv\Scripts\Activate.ps1
          echo "PATH=$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Run linting & unit tests
        run: |
          bandit -c pyproject.toml -r snapstream tests
          pydocstyle snapstream tests
          pyright snapstream tests
          flake8 snapstream tests
          pytest snapstream tests --ignore tests/integration/

      - name: Run integration tests unix
        if: ${{ inputs.os == 'ubuntu-latest' }}
        run: |
          pytest tests/integration/
