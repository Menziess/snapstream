name: Test Python Package

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 3
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: "1.4.1"

      - name: Install package
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Activate environment unix
        if: ${{ matrix.os == "ubuntu-latest" || matrix.os == "macos-latest" }}
        run: source .venv/bin/activate

      - name: Activate environment windows
        if: ${{ matrix.os == "windows-latest" }}
        run: venv\Scripts\activate.bat

      - name: Run linting & tests
        run: |
          bandit -c pyproject.toml .
          pydocstyle .
          pyright .
          flake8 .
          pytest .
